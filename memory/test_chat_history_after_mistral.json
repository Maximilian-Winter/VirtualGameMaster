[
  {
    "role": "system",
    "content": "# Instructions\n\nYour task is to act as a Game Master (GM) for a text-based role-playing game. Your primary goal is to create an engaging, immersive, and dynamic role-playing experience for the player. You will narrate the story, describe the world, control non-player characters (NPCs), and adjudicate rules based on the provided game state and the game world knowledge graph.\n\n## Core Responsibilities\n\n1. World Building\n   - Maintain a consistent and believable game world based on the provided setting information.\n   - Gradually reveal world details through narration, NPC dialogue, and player discoveries.\n   - Ensure that new locations and events align with established world lore.\n\n2. Storytelling\n   - Craft compelling narratives that engage the player and allow for character development.\n   - Balance main plot progression with side quests and character moments.\n   - Use narrative techniques like foreshadowing, callbacks, and dramatic irony to enhance the story.\n\n3. NPC Portrayal\n   - Bring non-player characters to life with distinct personalities, motivations, and speech patterns.\n   - Ensure NPC actions and reactions are consistent with their established characteristics and the current game state.\n   - Use NPCs to provide information, advance the plot, and create memorable interactions.\n\n4. Challenge Design\n   - Create varied and appropriate challenges for the player, including combat, puzzles, and social encounters.\n   - Balance difficulty to maintain engagement without frustrating the player.\n   - Ensure challenges are consistent with the game world and current narrative.\n\n5. Pacing\n   - Manage the flow of the game, balancing different types of gameplay (e.g., action, dialogue, exploration).\n   - Provide moments of tension and relaxation to create a satisfying rhythm.\n   - Adjust pacing based on player engagement and story needs.\n\n6. Player Agency\n   - Present situations, environments, and NPC actions clearly, then prompt the player for their character's response.\n   - Use phrases like \"What do you do?\", \"How does [character name] respond?\", or \"What's your next move?\" to encourage player input.\n   - Interpret and narrate the outcomes of the player's stated actions.\n   - Provide multiple paths to achieve goals when possible.\n   - Adapt the story and world in response to player decisions.\n\n7. Knowledge Graph Management\n   - Utilize the Game Knowledge Graph to maintain a consistent and detailed representation of the game world.\n   - Update the knowledge graph as the game progresses to reflect changes in the world state, character relationships, and quest progress.\n   - Use the knowledge graph to inform your decisions and ensure consistency in the game world.\n\n## Storytelling and Description Techniques\n\nTo enhance your narration:\n- Use all five senses in descriptions to create vivid imagery.\n- Vary sentence structure and length to maintain interest and emphasize key points.\n- Employ literary devices like metaphors, similes, and personification to enrich descriptions.\n- Create tension and suspense through pacing, foreshadowing, and withholding information.\n- Develop unique voices and mannerisms for NPCs to make them memorable and distinguishable.\n- Balance exposition with action and dialogue to maintain engagement.\n- Use environmental details to reinforce mood, atmosphere, and thematic elements.\n\n## Player Interaction Guidelines\n\n- After describing a new situation or NPC action, always pause for player input before progressing the story.\n- Use open-ended questions to prompt player decisions: \"How do you approach this?\", \"What's your plan?\", \"How does [character name] feel about this?\"\n- When players face choices, present options without bias: \"You could [option A], [option B], or something else entirely. What's your decision?\"\n- If a player's intended action is unclear, ask for clarification rather than assuming their intent.\n- Respond to player actions by describing their immediate effects and any resulting changes in the environment or NPC reactions.\n- Encourage roleplay by asking for the player's thoughts or feelings in key moments: \"How does [character name] react to this revelation?\"\n- Be prepared to improvise and adapt to unexpected player actions while maintaining narrative consistency.\n- If the player attempts an action that seems out of character or inconsistent with their established abilities, seek confirmation: \"That seems unusual for [character name]. Are you sure that's what you want to do?\"\n\n## Game World Knowledge Graph\n\nTo assist you in managing the complex game world, you have access to a game world knowledge graph. This graph represents entities (such as characters, items, and locations) as nodes and relationships between these entities as edges. Each entity and relationship can have attributes, allowing for a rich and detailed representation of the game state.\n\n### Interacting with the Game World Knowledge Graph\n\nYou have access to the following predefined types and functions to interact with the world knowledge graph:\n\n```python\nclass GameEntityType(Enum):\n    CHARACTER = 'Character'\n    CREATURE = 'Creature'\n    LOCATION = 'Location'\n    ITEM = 'Item'\n    QUEST = 'Quest'\n    EVENT = 'Event'\n    FACTION = 'Faction'\n\nclass GameEntity:\n    \"\"\"\n    A class representing the parameters.\n    Attributes:\n        entity_type (GameEntityType): The type of entity\n        entity_data (Dict): The entity data\n    \"\"\"\n    # Implementation omitted for brevity\n    pass\n\ndef add_entity(game_entity: GameEntity):\n    \"\"\"\n    Adds a game entity to the game world knowledge graph. Returns the entity id of the entity added.\n\n    Args:\n        game_entity (GameEntity): The entity to add.\n    \"\"\"\n    # Implementation omitted for brevity\n    pass\n\n\ndef add_relationship(first_game_entity_id: str, relationship_type: str, second_game_entity_id: str, description: Optional[str]):\n    \"\"\"\n    Adds a relationship between two entities to the game world knowledge graph.\n\n    Args:\n        first_game_entity_id (str): The first game entity id.\n        relationship_type (str): The relationship type.\n        second_game_entity_id (str): The second game entity id.\n        description (Optional[str]): The description of the relationship type.\n    \"\"\"\n    # Implementation omitted for brevity\n    pass\n\n\nclass GameEntityType(Enum):\n    CHARACTER = 'Character'\n    CREATURE = 'Creature'\n    LOCATION = 'Location'\n    ITEM = 'Item'\n    QUEST = 'Quest'\n    EVENT = 'Event'\n    FACTION = 'Faction'\n\nclass GameEntityQuery:\n    \"\"\"\n    A class representing the parameters.\n    Attributes:\n        entity_type (GameEntityType): The type of entity to query\n        entity_data_filter (Optional[Dict]): The entity data filter\n    \"\"\"\n    # Implementation omitted for brevity\n    pass\n\ndef query_entities(entity_query: GameEntityQuery):\n    \"\"\"\n    Query entities of the game world knowledge graph.\n\n    Args:\n        entity_query (GameEntityQuery): The entity query.\n    \"\"\"\n    # Implementation omitted for brevity\n    pass\n\n\ndef query_relationships(game_entity_id: str, relationship_type: Optional[str]):\n    \"\"\"\n    Query relationships of an entity of the game world knowledge graph.\n\n    Args:\n        game_entity_id (str): The game entity id.\n        relationship_type (Optional[str]): The relationship type.\n    \"\"\"\n    # Implementation omitted for brevity\n    pass\n\n\ndef query_entities_by_attribute(attribute_name: str, attribute_value: str):\n    \"\"\"\n    Queries entities based on a specific attribute value.\n\n    Args:\n        attribute_name (str): The name of the attribute to query.\n        attribute_value (str): The value of the attribute to match.\n    \"\"\"\n    # Implementation omitted for brevity\n    pass\n\n\ndef get_entity_details(entity_id: str):\n    \"\"\"\n    Retrieves detailed information about a specific entity.\n\n    Args:\n        entity_id (str): The ID of the entity to retrieve details for.\n    \"\"\"\n    # Implementation omitted for brevity\n    pass\n\n\ndef get_nearby_entities(location_id: str, game_entity_type: Optional[GameEntityType], max_distance: int):\n    \"\"\"\n    Finds entities that are near a specified location in the knowledge graph.\n\n    Args:\n        location_id (str): The ID of the location to search from.\n        game_entity_type (Optional[GameEntityType]): The type of game entity to filter by.\n        max_distance (int): The maximum distance (in graph edges) to search.\n    \"\"\"\n    # Implementation omitted for brevity\n    pass\n\n```\n\nYou can use these types and functions without defining them. Put your code that uses the predefined types and interact with the predefined functions into a python markdown code block. For example:\n\n```python\njack = GameEntity(\n    entity_type=GameEntityType.CHARACTER,\n    entity_data={\n        'name': 'Jack Ryan',\n        'race': 'Human',\n        'class': 'Wizard',\n        'background': 'Charlatan',\n        'age': 'Late fifties'\n    }\n)\n    \njack_id = add_entity(jack)\n```\n\n### Best Practices for Knowledge Graph Use\n\n1. Consistency: Maintain consistent naming conventions for entities and relationships.\n2. Completeness: Ensure all relevant attributes are included when adding or updating entities.\n3. Efficiency: Use specific queries rather than retrieving large amounts of data unnecessarily.\n4. Dynamic Updates: Keep the game world up-to-date by regularly updating entity attributes based on game events.\n5. Relationship Awareness: Utilize relationships between entities to create a rich, interconnected game world.\n6. Relationship Types: Always use simple relationship types when creating or querying relationships.\n\n## Game State\n\nUse the following sections from the game state to inform your responses and maintain consistency.\nWhen using the information from the game state sections and the Game Knowledge Graph:\n- Ensure consistency between established facts, new developments, and the knowledge graph representation.\n- Use the knowledge graph to inform NPC interactions, quest progressions, and world state changes.\n- Regularly update the knowledge graph to reflect changes in the game world, character relationships, and quest statuses.\n- Utilize the knowledge graph for complex queries about the game world, such as finding connections between characters or locations.\n\n### Setting\nToril, the main world of the Dungeons and Dragons Universe, specifically the Sword Coast and the infamous Undermountain beneath Waterdeep.\n\n### Time and Calendar\n- Current date: 1 Mirtul, 1492 DR (Dale Reckoning)\n- Season: Late spring\n- Time of day: Late afternoon, as Elysia and Lyra approach Waterdeep\n\n### Player Character\nElysia Thunderscribe: A Human female Wizard and Sage of Candlekeep with expressive, indigo eyes full of knowledge and secrets. Her charcoal-black hair is streaked with silver and often loosely tied in a braid, shimmering with astral sparkles whenever she casts a spell. Even though she is in her late twenties, the look in her eyes is ageless, indicating wisdom far beyond her years. Her slender figure is draped in a celestial-blue robe adorned with runic symbols, the fabric shimmering as if dusted with stardust. She carries an ornate staff, topped with a crystal orb pulsating with arcane energy. Though her delicate features might deceive some, her aura emanates formidable power, proof of her prowess in the arcane arts and her extensive knowledge as a Candlekeep sage.\n\n### Companions\n- Lyra Flameheart: An Eladrin female Fighter (Eldritch Knight) and fellow Sage of Candlekeep with eyes that shift color with the seasons - currently a warm amber for summer. Her wild, copper-red hair flows like living flame, occasionally shimmering with fey light. Eternally youthful as an Eladrin, her alabaster skin bears subtle, swirling patterns that glow softly when she uses magic. Lyra's athletic build is encased in elegant elven half-plate armor, its design reminiscent of autumn leaves and forest vines. A longsword with a hilt wrapped in living vines hangs at her side, while a shield emblazoned with the symbol of a tree in four seasonal states is strapped to her back. Despite her martial bearing, there's an otherworldly grace to her movements, hinting at her fey nature. Her expression often shifts between fierce determination and mischievous mirth, reflecting the changeable nature of the Feywild. As a sage, she combines her martial prowess with a deep understanding of arcane lore.\n\n### Character Details\nElysia Thunderscribe:\n  Race: Human\n  Class: Wizard\n  Background: Sage of Candlekeep\n  Age: Late twenties\n  Notable features:\n    - Indigo eyes\n    - Charcoal-black hair with silver streaks\n    - Celestial-blue robe with runic symbols\n    - Ornate staff with crystal orb\nLyra Flameheart:\n  Race: Eladrin\n  Class: Fighter\n  Subclass: Eldritch Knight\n  Background: Sage of Candlekeep\n  Age: Eternally youthful (typical for Eladrin)\n  Notable features:\n    - Eyes that change color with seasons (currently amber for summer)\n    - Copper-red hair with fey light\n    - Elven half-plate armor designed with nature motifs\n    - Longsword with vine-wrapped hilt\n    - Shield with four-seasons tree symbol\n\n### Relationships\n- Elysia and Lyra are girlfriends, fellow sages, and adventuring companions.\n\n### Party Members\n- Elysia Thunderscribe\n- Lyra Flameheart\n\n### Location\nOn the road to Waterdeep, about half a day's journey from the city gates.\n\n### World State\n- The Sword Coast is currently in a state of relative peace, though rumors of growing threats persist.\n- Waterdeep, the City of Splendors, continues to be a hub of commerce and intrigue.\n- The Lords' Alliance maintains a fragile balance of power among the cities of the Sword Coast.\n- Undermountain remains a constant threat and source of mystery beneath Waterdeep.\n\n### Factions\n- Lords' Alliance: A coalition of rulers from cities across the Sword Coast, working together to ensure mutual security.\n- Harpers: A secret network of spellcasters and spies who covertly oppose the rise of tyranny.\n- Zhentarim: A shadowy organization seeking to expand its influence through legitimate and illicit means.\n- Emerald Enclave: Druids and others who protect the delicate balance of nature.\n- Candlekeep Sages: A group of scholars and wizards dedicated to preserving and expanding knowledge.\n\n### Story Summary\nElysia Thunderscribe and Lyra Flameheart, both powerful sages from Candlekeep, are on a quest to find the legendary \"Celestial Codex,\" an ancient spellbook of immense power. Their research has led them to believe that the last known owner of this artifact was the infamous Archmage Halaster Blackcloak. This revelation has brought them to the doorstep of Waterdeep, as they plan an expedition into the deadly depths of Undermountain, Halaster's domain. As they approach the City of Splendors, they must prepare for the challenges that lie ahead in the most dangerous dungeon in the Forgotten Realms.\n\n### Important Events\n- Discovery of the Celestial Codex's connection to Halaster Blackcloak\n- Decision to embark on an expedition to the Undermountain\n- Approaching Waterdeep for final preparations\n\n### Active Quests\n- Find the Celestial Codex in the Undermountain\n- Navigate the dangers of Halaster's domain\n\n### Key NPCs\n- Halaster Blackcloak (mentioned, not yet encountered)\n\n### Inventory\n- Ornate staff with crystal orb\n- Spellbook\n- Component pouch\n- Backpack\n- Bedroll\n- Mess kit\n- Tinderbox\n- 10 torches\n- 10 days of rations\n- Waterskin\n- 50 feet of hempen rope\n- 1200 gold pieces\n- Candlekeep seal of authority (grants access to certain restricted areas and resources)\n- Map of known Undermountain levels (incomplete and potentially outdated)\n\n### Special Items\nname: Ring of Whispered Thoughts\ndescription: This unassuming silver ring is adorned with a small, smoky quartz gem.  When activated, the gem seems to swirl with mist-like patterns.\n\nproperties:\n  - Once per day, the wearer can activate the ring as a bonus action.\n  - For the next hour, the wearer can read the surface thoughts of any creature within 180 feet that the wearer can see.\n  - The target is unaware of this mind-reading attempt and gets no saving throw.\n  - The wearer receives general impressions, emotional states, and current thoughts. Complex or deep memories are not accessible.\n  - The effect is completely silent and invisible, making it undetectable through normal means.\n  - If a creature has telepathic abilities or is protected against mind-reading, they might sense the intrusion with a DC 20 Wisdom (Insight) check.\nlimitations:\n  - The ring requires attunement.\n  - Prolonged use (more than 3 times per week) might have side effects like headaches or temporary inability to block out others' thoughts.\n\n## Response Format\n\nWhen interacting with the knowledge graph:\n- Always put the code you want to execute into a markdown python code block.\n\nWhen interacting with a player:\n- Each time the date or location changes, begin each response with the current in-game date and the character's location.\n  Format: [Date and Time] - [Location]\n---\n# Important Notes\n- NEVER REDEFINE THE PREDEFINED TYPES AND FUNCTIONS!\n- Always save the entity ID returned by `add_entity()` in a variable. These IDs are necessary for creating relationships.\n- When creating entities and relationships, think about how they interconnect to form a cohesive world.\n- Consider the implications of each addition to the world and how it might affect existing entities and relationships.\n- Be prepared to use query functions to check existing entities and relationships before adding new ones to maintain consistency.\n\nRemember, your role is to create an immersive, reactive, and engaging game world. Use the provided game state and the Game Knowledge Graph as a foundation, but don't be afraid to expand upon it creatively while maintaining consistency. Your goal is to deliver a rich, personalized gaming experience that responds dynamically to the player's choices and actions.\n---"
  },
  {
    "role": "user",
    "content": "Add the below information to the knowledge graph with all details.\n\nGame World:\n\nGeneral:\n  Races:\n    Common:\n      - Humans: Versatile and widespread\n      - Elves: Long-lived and magical\n      - Dwarves: Sturdy and craftsmen\n      - Halflings: Small and nimble\n      - Gnomes: Inventive and curious\n    Uncommon:\n      - Half-Elves: Blend of human and elven traits\n      - Half-Orcs: Strong and resilient\n      - Tieflings: Infernal heritage\n      - Dragonborn: Draconic humanoids\n    Rare:\n      - Aasimar: Celestial-touched humans\n      - Genasi: Elemental-touched humans\n      - Goliaths: Giant-kin\n      - Tabaxi: Cat-like humanoids\n  Gods:\n    Greater-Deities:\n      - Mystra: Goddess of Magic\n      - Tyr: God of Justice\n      - Tempus: God of War\n      - Sune: Goddess of Love and Beauty\n      - Seluene: Goddess of the Moon\n    Intermediate-Deities:\n      - Helm: God of Protection\n      - Lathander: God of Dawn and Renewal\n      - Kelemvor: God of the Dead\n      - Silvanus: God of Nature\n    Lesser-Deities:\n      - Mask: God of Thieves\n      - Tymora: Goddess of Luck\n      - Beshaba: Goddess of Misfortune\n    Dead-Gods:\n      - Myrkul: Former God of Death\n      - Bhaal: Former God of Murder\n  Extraplanar-Entities:\n    Celestials:\n      - Solar: Powerful angelic beings\n      - Planetar: Elite warriors of the Upper Planes\n      - Deva: Messengers and guardians\n    Fiends:\n      Devils:\n        - Pit Fiends: Rulers of the Nine Hells\n        - Erinyes: Fallen angels\n      Demons:\n        - Balor: Generals of the Abyss\n        - Marilith: Six-armed demon commanders\n    Elementals:\n      - Primordials: Ancient elemental beings\n      - Genies: Powerful elemental entities (Djinn, Efreet, Marid, Dao)\n    Fey:\n      - Archfey: Powerful rulers of the Feywild\n      - Eladrin: Fey elves\n      - Satyrs and Dryads: Nature spirits\n  Planes-Of-Existence:\n    Material-Plane: The primary world of mortals\n    Inner-Planes:\n      - Elemental Planes: Fire, Water, Air, Earth\n      - Energy Planes: Positive and Negative\n    Outer-Planes:\n      Upper-Planes:\n        - Mount Celestia: Realm of law and good\n        - Elysium: Realm of pure good\n      Lower-Planes:\n        - The Nine Hells: Realm of law and evil\n        - The Abyss: Realm of chaos and evil\n    Transitive-Planes:\n      - Astral Plane: Realm of thought and dreams\n      - Ethereal Plane: Realm of mists and ghosts\n    Mirror-Planes:\n      - Feywild: Magical reflection of the Material Plane\n      - Shadowfell: Dark reflection of the Material Plane\n  Magic:\n    Weave: The source of arcane magic, maintained by Mystra\n    Schools:\n      - Abjuration, Conjuration, Divination, Enchantment\n      - Evocation, Illusion, Necromancy, Transmutation\n    Types:\n      - Arcane: Wizards, Sorcerers, Warlocks\n      - Divine: Clerics, Paladins\n      - Primal: Druids, Rangers\n      - Psionic: Mind Flayers, some monsters\n  Major-Historical-Events:\n    - Time of Troubles: Gods walked the Material Plane\n    - Spellplague: Magical catastrophe caused by Mystra's death\n    - Sundering: Cosmic event reshaping reality\n  Current-World-State:\n    - Era of upheaval and change\n    - Rise of new threats and opportunities\n    - Shifting balance of power among nations and factions\nWaterdeep:\n  Overview: Waterdeep, the City of Splendors, is the most influential and important city in the North and perhaps in all Faer\u00c3\u00bbn.  A bustling city of commerce and opportunity, it serves as a key location in many adventures.\n  Key-Features:\n    - Population: Approximately 130,000 permanent residents\n    - Government: Ruled by a council of masked Lords and the Open Lord\n    - Economy: Major trade hub for the Sword Coast\n    - Defenses: Powerful city guard and magical wards\n  Districts:\n    - Castle Ward: Government and administrative center\n    - Sea Ward: Wealthy residential area and home to many temples\n    - North Ward: Home to nobility and merchants\n    - Trades Ward: Center of commerce\n    - Southern Ward: Working class residential area\n    - Dock Ward: Maritime commerce and rough taverns\n    - Field Ward: Shantytown outside the city walls\n    - City of the Dead: Walled cemetery, quiet during the day but dangerous at night\n    - Undermountain: Vast dungeon complex beneath the city\n    - Skullport: Hidden port city deep in Undermountain\n  Important-Locations:\n    - Mount Waterdeep: Prominent mountain overlooking the city\n    - Yawning Portal Inn: Famous tavern built over an entrance to Undermountain\n    - Blackstaff Tower: Home of the Archmage of Waterdeep\n    - Castle Waterdeep: Fortress overlooking the city\n    - The Walking Statues: Massive stone constructs that defend the city\n  Factions:\n    - Lords of Waterdeep: Masked rulers of the city\n    - City Guard and City Watch: Law enforcement\n    - Harpers: Secret society working for good\n    - Zhentarim: Mercantile organization with a dark reputation\n    - Order of the Gauntlet: Paladins and clerics fighting evil\n    - Emerald Enclave: Druids and rangers protecting nature\n    - Force Grey: Elite adventurers serving the city\n  Culture:\n    - Diverse population including humans, dwarves, elves, and many other races\n    - Center of fashion, art, and magical innovation\n    - Home to many temples, including the Temple of Gond and the Plinth\n    - Famous for its festivals and celebrations\n  Economy:\n    - Major port city controlling trade along the Sword Coast\n    - Hub for overland trade routes\n    - Home to many guilds and mercantile companies\n    - Minting its own trade bars and coins\n  History:\n    - Founded over 1,000 years ago\n    - Built on the site of the ancient elven city of Aelinthaldaar\n    - Survived many threats including plagues, invasions, and internal strife\n  Current-Events:\n    - Tensions with Luskan over sea trade\n    - Rumors of corruption within the city's guilds\n    - Increased monster activity in Undermountain\n    - Growing influence of extraplanar entities\n  Connections-To-Story:\n    - Last stop before entering Undermountain\n    - Source of information and resources for the quest\n    - Potential allies or rivals among the city's factions\n    - Possible location of clues about the Celestial Codex\n  DM-Notes:\n    - Use Waterdeep as a central hub for the players\n    - Introduce faction intrigue to add depth to the city experience\n    - Consider urban adventures or side quests within the city\n    - Emphasize the contrast between the bustling city life and the dangers of Undermountain\nUndermountain:\n  Overview: Undermountain is a vast dungeon complex beneath Mount Waterdeep, created over a thousand years ago by the wizard Halaster Blackcloak. It's known as the deadliest dungeon in the Forgotten Realms.\n  Key-Features:\n    - Massive size: Multiple levels extending deep into the earth\n    - Ever-changing layout: Halaster's magic constantly alters the dungeon\n    - Diverse inhabitants: From monsters to entire societies\n    - Magical anomalies: Due to a knot in the Weave of magic\n  History:\n    - Founded by Halaster Blackcloak and his seven apprentices\n    - Built over and expanded into the dwarven Underhalls\n    - Became Halaster's obsession, driving him to madness\n    - Now accessible through the Yawning Portal tavern in Waterdeep\n  Notable-Areas:\n    - The Yawning Portal: Entrance to Undermountain in Waterdeep\n    - Underhalls: Former dwarven mithral mine\n    - Halaster's tower ruins: Now beneath Waterdeep\n  Inhabitants:\n    - Monsters from various planes\n    - Remnants of drow and duergar societies\n    - Adventurers and explorers\n    - Halaster Blackcloak (location unknown)\n  Magical-Properties:\n    Weave-Knot:\n      Description: A permanent knot in the Weave of magic, created by an ancient elven spell\n      Effects:\n        - Can cause madness in long-term inhabitants\n        - Manifests as an obsession with Undermountain\n        - Affects both creatures and adventurers\n  Dangers:\n    - Unpredictable layout changes\n    - Powerful monsters and traps\n    - Risk of magical madness\n    - Halaster's unpredictable interventions\n  Opportunities:\n    - Ancient treasures and artifacts\n    - Forgotten knowledge and magic\n    - Challenges for adventurers of all levels\n  Connections-To-Story:\n    - Possible location of the Celestial Codex\n    - Last known domain of Halaster Blackcloak\n    - Major obstacle in the player characters' quest\n  DM-Notes:\n    - Use Undermountain to create a sense of mystery and danger\n    - Emphasize the risk of magical madness as characters delve deeper\n    - Introduce strange and otherworldly elements to reflect Halaster's planar connections"
  },
  {
    "role": "assistant",
    "content": "```python\n# Add Races to the Knowledge Graph\n\nhuman = GameEntity(\n    entity_type=GameEntityType.CREATURE,\n    entity_data={\n        'name': 'Human',\n        'description': 'Versatile and widespread race.',\n        'traits': ['Versatile', 'Widespread']\n    }\n)\nadd_entity(human)\n\nelf = GameEntity(\n    entity_type=GameEntityType.CREATURE,\n    entity_data={\n        'name': 'Elf',\n        'description': 'Long-lived and magical race.',\n        'traits': ['Long-lived', 'Magical']\n    }\n)\nadd_entity(elf)\n\ndwarf = GameEntity(\n    entity_type=GameEntityType.CREATURE,\n    entity_data={\n        'name': 'Dwarf',\n        'description': 'Sturdy and skilled craftsmen race.',\n        'traits': ['Sturdy', 'Skilled Craftsmen']\n    }\n)\nadd_entity(dwarf)\n\nhalfling = GameEntity(\n    entity_type=GameEntityType.CREATURE,\n    entity_data={\n        'name': 'Halfling',\n        'description': 'Small and nimble race.',\n        'traits': ['Small', 'Nimble']\n    }\n)\nadd_entity(halfling)\n\ngnome = GameEntity(\n    entity_type=GameEntityType.CREATURE,\n    entity_data={\n        'name': 'Gnome',\n        'description': 'Inventive and curious race.',\n        'traits': ['Inventive', 'Curious']\n    }\n)\nadd_entity(gnome)\n\nhalf_elf = GameEntity(\n    entity_type=GameEntityType.CREATURE,\n    entity_data={\n        'name': 'Half-Elf',\n        'description': 'Blend of human and elven traits.',\n        'traits': ['Human', 'Elven']\n    }\n)\nadd_entity(half_elf)\n\nhalf_orc = GameEntity(\n    entity_type=GameEntityType.CREATURE,\n    entity_data={\n        'name': 'Half-Orc',\n        'description': 'Strong and resilient race.',\n        'traits': ['Strong', 'Resilient']\n    }\n)\nadd_entity(half_orc)\n\ntiefling = GameEntity(\n    entity_type=GameEntityType.CREATURE,\n    entity_data={\n        'name': 'Tiefling',\n        'description': 'Infernal heritage race.',\n        'traits': ['Infernal Heritage']\n    }\n)\nadd_entity(tiefling)\n\ndragonborn = GameEntity(\n    entity_type=GameEntityType.CREATURE,\n    entity_data={\n        'name': 'Dragonborn',\n        'description': 'Draconic humanoids race.',\n        'traits': ['Draconic', 'Humanoid']\n    }\n)\nadd_entity(dragonborn)\n\naasimar = GameEntity(\n    entity_type=GameEntityType.CREATURE,\n    entity_data={\n        'name': 'Aasimar',\n        'description': 'Celestial-touched humans race.',\n        'traits': ['Celestial-Touched', 'Human']\n    }\n)\nadd_entity(aasimar)\n\ngenasi = GameEntity(\n    entity_type=GameEntityType.CREATURE,\n    entity_data={\n        'name': 'Genasi',\n        'description': 'Elemental-touched humans race.',\n        'traits': ['Elemental-Touched', 'Human']\n    }\n)\nadd_entity(genasi)\n\ngoliath = GameEntity(\n    entity_type=GameEntityType.CREATURE,\n    entity_data={\n        'name': 'Goliath',\n        'description': 'Giant-kin race.',\n        'traits': ['Giant-Kin']\n    }\n)\nadd_entity(goliath)\n\ntabaxi = GameEntity(\n    entity_type=GameEntityType.CREATURE,\n    entity_data={\n        'name': 'Tabaxi',\n        'description': 'Cat-like humanoids race.',\n        'traits': ['Cat-Like', 'Humanoid']\n    }\n)\nadd_entity(tabaxi)\n\n# Add Gods to the Knowledge Graph\n\nmystra = GameEntity(\n    entity_type=GameEntityType.CREATURE,\n    entity_data={\n        'name': 'Mystra',\n        'description': 'Goddess of Magic.',\n        'domain': 'Magic'\n    }\n)\nadd_entity(mystra)\n\ntyr = GameEntity(\n    entity_type=GameEntityType.CREATURE,\n    entity_data={\n        'name': 'Tyr',\n        'description': 'God of Justice.',\n        'domain': 'Justice'\n    }\n)\nadd_entity(tyr)\n\ntempus = GameEntity(\n    entity_type=GameEntityType.CREATURE,\n    entity_data={\n        'name': 'Tempus',\n        'description': 'God of War.',\n        'domain': 'War'\n    }\n)\nadd_entity(tempus)\n\nsune = GameEntity(\n    entity_type=GameEntityType.CREATURE,\n    entity_data={\n        'name': 'Sune',\n        'description': 'Goddess of Love and Beauty.',\n        'domain': 'Love, Beauty'\n    }\n)\nadd_entity(sune)\n\nseluene = GameEntity(\n    entity_type=GameEntityType.CREATURE,\n    entity_data={\n        'name': 'Seluene',\n        'description': 'Goddess of the Moon.',\n        'domain': 'Moon'\n    }\n)\nadd_entity(seluene)\n\nhelm = GameEntity(\n    entity_type=GameEntityType.CREATURE,\n    entity_data={\n        'name': 'Helm',\n        'description': 'God of Protection.',\n        'domain': 'Protection'\n    }\n)\nadd_entity(helm)\n\nlathander = GameEntity(\n    entity_type=GameEntityType.CREATURE,\n    entity_data={\n        'name': 'Lathander',\n        'description': 'God of Dawn and Renewal.',\n        'domain': 'Dawn, Renewal'\n    }\n)\nadd_entity(lathander)\n\nkelemvor = GameEntity(\n    entity_type=GameEntityType.CREATURE,\n    entity_data={\n        'name': 'Kelemvor',\n        'description': 'God of the Dead.',\n        'domain': 'Death'\n    }\n)\nadd_entity(kelemvor)\n\nsilvanus = GameEntity(\n    entity_type=GameEntityType.CREATURE,\n    entity_data={\n        'name': 'Silvanus',\n        'description': 'God of Nature.',\n        'domain': 'Nature'\n    }\n)\nadd_entity(silvanus)\n\nmask = GameEntity(\n    entity_type=GameEntityType.CREATURE,\n    entity_data={\n        'name': 'Mask',\n        'description': 'God of Thieves.',\n        'domain': 'Thieves'\n    }\n)\nadd_entity(mask)\n\ntymora = GameEntity(\n    entity_type=GameEntityType.CREATURE,\n    entity_data={\n        'name': 'Tymora',\n        'description': 'Goddess of Luck.',\n        'domain': 'Luck'\n    }\n)\nadd_entity(tymora)\n\nbeshaba = GameEntity(\n    entity_type=GameEntityType.CREATURE,\n    entity_data={\n        'name': 'Beshaba',\n        'description': 'Goddess of Misfortune.',\n        'domain': 'Misfortune'\n    }\n)\nadd_entity(beshaba)\n\nmyrkul = GameEntity(\n    entity_type=GameEntityType.CREATURE,\n    entity_data={\n        'name': 'Myrkul',\n        'description': 'Former God of Death.',\n        'domain': 'Death (former)'\n    }\n)\nadd_entity(myrkul)\n\nbhaal = GameEntity(\n    entity_type=GameEntityType.CREATURE,\n    entity_data={\n        'name': 'Bhaal',\n        'description': 'Former God of Murder.',\n        'domain': 'Murder (former)'\n    }\n)\nadd_entity(bhaal)\n\n# Add Extraplanar Entities to the Knowledge Graph\n\nsolar = GameEntity(\n    entity_type=GameEntityType.CREATURE,\n    entity_data={\n        'name': 'Solar',\n        'description': 'Powerful angelic beings.',\n        'alignment': 'Good'\n    }\n)\nadd_entity(solar)\n\nplanetar = GameEntity(\n    entity_type=GameEntityType.CREATURE,\n    entity_data={\n        'name': 'Planetar',\n        'description': 'Elite warriors of the Upper Planes.',\n        'alignment': 'Good'\n    }\n)\nadd_entity(planetar)\n\ndeva = GameEntity(\n    entity_type=GameEntityType.CREATURE,\n    entity_data={\n        'name': 'Deva',\n        'description': 'Messengers and guardians.',\n        'alignment': 'Good'\n    }\n)\nadd_entity(deva)\n\npit_fiend = GameEntity(\n    entity_type=GameEntityType.CREATURE,\n    entity_data={\n        'name': 'Pit Fiend',\n        'description': 'Rulers of the Nine Hells.',\n        'alignment': 'Evil'\n    }\n)\nadd_entity(pit_fiend)\n\nerinyes = GameEntity(\n    entity_type=GameEntityType.CREATURE,\n    entity_data={\n        'name': 'Erinyes',\n        'description': 'Fallen angels.',\n        'alignment': 'Evil'\n    }\n)\nadd_entity(erinyes)\n\nbalor = GameEntity(\n    entity_type=GameEntityType.CREATURE,\n    entity_data={\n        'name': 'Balor',\n        'description': 'Generals of the Abyss.',\n        'alignment': 'Evil'\n    }\n)\nadd_entity(balor)\n\nmarilith = GameEntity(\n    entity_type=GameEntityType.CREATURE,\n    entity_data={\n        'name': 'Marilith',\n        'description': 'Six-armed demon commanders.',\n        'alignment': 'Evil'\n    }\n)\nadd_entity(marilith)\n\nprimordial = GameEntity(\n    entity_type=GameEntityType.CREATURE,\n    entity_data={\n        'name': 'Primordial',\n        'description': 'Ancient elemental beings.',\n        'alignment': 'Neutral'\n    }\n)\nadd_entity(primordial)\n\ngenie = GameEntity(\n    entity_type=GameEntityType.CREATURE,\n    entity_data={\n        'name': 'Genie',\n        'description': 'Powerful elemental entities (Djinn, Efreet, Marid, Dao).',\n        'alignment': 'Neutral'\n    }\n)\nadd_entity(genie)\n\narchfey = GameEntity(\n    entity_type=GameEntityType.CREATURE,\n    entity_data={\n        'name': 'Archfey',\n        'description': 'Powerful rulers of the Feywild.',\n        'alignment': 'Chaotic Good'\n    }\n)\nadd_entity(archfey)\n\neladrin = GameEntity(\n    entity_type=GameEntityType.CREATURE,\n    entity_data={\n        'name': 'Eladrin',\n        'description': 'Fey elves.',\n        'alignment': 'Chaotic Good'\n    }\n)\nadd_entity(eladrin)\n\nsatyrs_and_dryads = GameEntity(\n    entity_type=GameEntityType.CREATURE,\n    entity_data={\n        'name': 'Satyrs and Dryads',\n        'description': 'Nature spirits.',\n        'alignment': 'Neutral Good'\n    }\n)\nadd_entity(satyrs_and_dryads)\n\n# Add Planes of Existence to the Knowledge Graph\n\nmaterial_plane = GameEntity(\n    entity_type=GameEntityType.LOCATION,\n    entity_data={\n        'name': 'Material Plane',\n        'description': 'The primary world of mortals.',\n        'type': 'Plane'\n    }\n)\nadd_entity(material_plane)\n\nelemental_planes = GameEntity(\n    entity_type=GameEntityType.LOCATION,\n    entity_data={\n        'name': 'Elemental Planes',\n        'description': 'Fire, Water, Air, Earth.',\n        'type': 'Inner Plane'\n    }\n)\nadd_entity(elemental_planes)\n\nenergy_planes = GameEntity(\n    entity_type=GameEntityType.LOCATION,\n    entity_data={\n        'name': 'Energy Planes',\n        'description': 'Positive and Negative.',\n        'type': 'Inner Plane'\n    }\n)\nadd_entity(energy_planes)\n\nupper_planes = GameEntity(\n    entity_type=GameEntityType.LOCATION,\n    entity_data={\n        'name': 'Upper Planes',\n        'description': 'Mount Celestia, Elysium.',\n        'type': 'Outer Plane'\n    }\n)\nadd_entity(upper_planes)\n\nlower_planes = GameEntity(\n    entity_type=GameEntityType.LOCATION,\n    entity_data={\n        'name': 'Lower Planes',\n        'description': 'The Nine Hells, The Abyss.',\n        'type': 'Outer Plane'\n    }\n)\nadd_entity(lower_planes)\n\ntransitive_planes = GameEntity(\n    entity_type=GameEntityType.LOCATION,\n    entity_data={\n        'name': 'Transitive Planes',\n        'description': 'Astral Plane, Ethereal Plane.',\n        'type': 'Outer Plane'\n    }\n)\nadd_entity(transitive_planes)\n\nmirror_planes = GameEntity(\n    entity_type=GameEntityType.LOCATION,\n    entity_data={\n        'name': 'Mirror Planes',\n        'description': 'Feywild, Shadowfell.',\n        'type': 'Outer Plane'\n    }\n)\nadd_entity(mirror_planes)\n\n# Add Magic to the Knowledge Graph\n\nweave = GameEntity(\n    entity_type=GameEntityType.CREATURE,\n    entity_data={\n        'name': 'Weave',\n        'description': 'The source of arcane magic, maintained by Mystra.',\n        'type': 'Magic'\n    }\n)\nadd_entity(weave)\n\nschools_of_magic = GameEntity(\n    entity_type=GameEntityType.CREATURE,\n    entity_data={\n        'name': 'Schools of Magic',\n        'description': 'Abjuration, Conjuration, Divination, Enchantment, Evocation, Illusion, Necromancy, Transmutation.',\n        'type': 'Magic'\n    }\n)\nadd_entity(schools_of_magic)\n\ntypes_of_magic = GameEntity(\n    entity_type=GameEntityType.CREATURE,\n    entity_data={\n        'name': 'Types of Magic',\n        'description': 'Arcane (Wizards, Sorcerers, Warlocks), Divine (Clerics, Paladins), Primal (Druids, Rangers), Psionic (Mind Flayers, some monsters).',\n        'type': 'Magic'\n    }\n)\nadd_entity(types_of_magic)\n\n# Add Major Historical Events to the Knowledge Graph\n\ntime_of_troubles = GameEntity(\n    entity_type=GameEntityType.EVENT,\n    entity_data={\n        'name': 'Time of Troubles',\n        'description': 'Gods walked the Material Plane.',\n        'date': 'Unknown'\n    }\n)\nadd_entity(time_of_troubles)\n\nspellplague = GameEntity(\n    entity_type=GameEntityType.EVENT,\n    entity_data={\n        'name': 'Spellplague',\n        'description': 'Magical catastrophe caused by Mystra\\'s death.',\n        'date': '1372 DR'\n    }\n)\nadd_entity(spellplague)\n\nsundering = GameEntity(\n    entity_type=GameEntityType.EVENT,\n    entity_data={\n        'name': 'Sundering',\n        'description': 'Cosmic event reshaping reality.',\n        'date': 'Unknown'\n    }\n)\nadd_entity(sundering)\n\n# Add Current World State to the Knowledge Graph\n\nera_of_upheaval_and_change = GameEntity(\n    entity_type=GameEntityType.EVENT,\n    entity_data={\n        'name': 'Era of Upheaval and Change',\n        'description': 'Rise of new threats and opportunities, shifting balance of power among nations and factions.',\n        'date': 'Present'\n    }\n)\nadd_entity(era_of_upheaval_and_change)\n\n# Add Waterdeep to the Knowledge Graph\n\nwaterdeep = GameEntity(\n    entity_type=GameEntityType.LOCATION,\n    entity_data={\n        'name': 'Waterdeep',\n        'description': 'The City of Splendors, a bustling city of commerce and opportunity.',\n        'population': 130000,\n        'government': 'Ruled by a council of masked Lords and the Open Lord',\n        'economy': 'Major trade hub for the Sword Coast',\n        'defenses': 'Powerful city guard and magical wards'\n    }\n)\nadd_entity(waterdeep)\n\n# Add Waterdeep Districts to the Knowledge Graph\n\ncastle_ward = GameEntity(\n    entity_type=GameEntityType.LOCATION,\n    entity_data={\n        'name': 'Castle Ward',\n        'description': 'Government and administrative center.',\n        'location': waterdeep.entity_data['id']\n    }\n)\nadd_entity(castle_ward)\n\nsea_ward = GameEntity(\n    entity_type=GameEntityType.LOCATION,\n    entity_data={\n        'name': 'Sea Ward',\n        'description': 'Wealthy residential area and home to many temples.',\n        'location': waterdeep.entity_data['id']\n    }\n)\nadd_entity(sea_ward)\n\nnorth_ward = GameEntity(\n    entity_type=GameEntityType.LOCATION,\n    entity_data={\n        'name': 'North Ward',\n        'description': 'Home to nobility and merchants.',\n        'location': waterdeep.entity_data['id']\n    }\n)\nadd_entity(north_ward)\n\ntrades_ward = GameEntity(\n    entity_type=GameEntityType.LOCATION,\n    entity_data={\n        'name': 'Trades Ward',\n        'description': 'Center of commerce.',\n        'location': waterdeep.entity_data['id']\n    }\n)\nadd_entity(trades_ward)\n\nsouthern_ward = GameEntity(\n    entity_type=GameEntityType.LOCATION,\n    entity_data={\n        'name': 'Southern Ward',\n        'description': 'Working class residential area.',\n        'location': waterdeep.entity_data['id']\n    }\n)\nadd_entity(southern_ward)\n\ndock_ward = GameEntity(\n    entity_type=GameEntityType.LOCATION,\n    entity_data={\n        'name': 'Dock Ward',\n        'description': 'Maritime commerce and rough taverns.',\n        'location': waterdeep.entity_data['id']\n    }\n)\nadd_entity(dock_ward)\n\nfield_ward = GameEntity(\n    entity_type=GameEntityType.LOCATION,\n    entity_data={\n        'name': 'Field Ward',\n        'description': 'Shantytown outside the city walls.',\n        'location': waterdeep.entity_data['id']\n    }\n)\nadd_entity(field_ward)\n\ncity_of_the_dead = GameEntity(\n    entity_type=GameEntityType.LOCATION,\n    entity_data={\n        'name': 'City of the Dead',\n        'description': 'Walled cemetery, quiet during the day but dangerous at night.',\n        'location': waterdeep.entity_data['id']\n    }\n)\nadd_entity(city_of_the_dead)\n\nundermountain = GameEntity(\n    entity_type=GameEntityType.LOCATION,\n    entity_data={\n        'name': 'Undermountain',\n        'description': 'V"
  }
]